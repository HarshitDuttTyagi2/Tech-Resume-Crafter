import { OpenAI } from "openai"; // Ensure correct import
import dotenv from "dotenv";
dotenv.config();

async function openai_call(req, res) {
    try {
        const apikey = process.env.OPENAI_API_KEY;
        const client = new OpenAI({ apiKey: apikey });

        let { messages } = req.body;
        console.log(messages);
        // Validate and sanitize the `messages` array
        if (!Array.isArray(messages)) {
            throw new Error("Invalid messages format. Expected an array.");
        }

        // Replace invalid `role: 'model'` with `role: 'assistant'`
        messages = messages.map((msg, index) => {
            if (msg.role === "model") {
                console.warn(`Replacing invalid role 'model' with 'assistant' at index ${index}`);
                return { ...msg, role: "assistant" };
            }
            return msg;
        });

        // Call OpenAI API
        const response = await client.chat.completions.create({
            model: "gpt-4", // Ensure the correct model is used
            messages,
        });

        // Extract generated response
        const generatedText = response.choices[0]?.message?.content;
        if (!generatedText) throw new Error("No response generated by OpenAI.");

        res.status(200).json({ answer: generatedText });
    } catch (error) {
        console.error("Error in openai_call:", error.message || error);
        res.status(500).json({ error: error.message || "Error calling OpenAI API" });
    }
}

export { openai_call };
